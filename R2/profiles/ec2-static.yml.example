profile_type: ec2-static

iaas:
  site: ec2.us-west-1
  region: us-west-1
  key: REPLACE_WITH_EC2_ACCESS_ID
  secret: REPLACE_WITH_EC2_SECRET
  base-image: r2-worker
  base-allocation: t1.micro
  sshkeyname: ooi

rabbitmq:
  host: REPLACE_WITH_RABBITMQ_HOSTNAME
  username: REPLACE_WITH_RABBITMQ_USERNAME
  password: REPLACE_WITH_RABBITMQ_PASSWORD

postgres:
  host: REPLACE_WITH_POSTGRES_HOSTNAME
  password: REPLACE_WITH_POSTGRES_PASSWORD
  admin_username: REPLACE_WITH_POSTGRES_ADMIN_USERNAME
  admin_password: REPLACE_WITH_POSTGRES_ADMIN_PASSWORD

graylog:
  host: logging-dev.oceanobservatories.org


# if desired, you can specify a custom URL for any of the packages used in
# the launch. Uncomment this block and adjust the desired URL. Any unspecified
# package URL falls back to the default.

#packages:
#  coi_services: http://some/url.tar.gz
#  dt_data: http://some/url.tar.gz
#  epu: http://some/url.tar.gz
#  epuagent: http://some/url.tar.gz


# the launch populates a pyon.yml template file and injects it into the
# launched containers in the system. If you set this value to a local
# path, the launch will also write the pyon config there. This is useful
# for running tests or preload steps against a launched environment.
# For example you might write directly to pyon.local.yml in a coi-services
# source tree:
#
#     pyon_config_output: ~/code/coi-services/res/config/pyon.local.yml

pyon_config_output: ""
