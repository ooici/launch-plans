profile_type: nimbus-dynamic

iaas:
  site: ooi.ucsd
  key: REPLACE_WITH_NIMBUS_KEY
  secret: REPLACE_WITH_NIMBUS_SECRET
  url: https://nimbus-dev0.oceanobservatories.org:8444
  base-image: r2-worker
  base-allocation: m1.large
  sshkeyname: ooi

rabbitmq:
  username: REPLACE_WITH_RABBITMQ_USERNAME
  password: REPLACE_WITH_RABBITMQ_PASSWORD

couchdb:
  username: REPLACE_WITH_COUCHDB_USERNAME
  password: REPLACE_WITH_COUCHDB_PASSWORD

# uncomment this section and provide hostnames if ZooKeeper is to be
# used -- this is required for supporting multiple instances of CEI
# services.
#
# Note that the launch does NOT support dynamically-booted ZooKeeper,
# so the only way to use it is to point to a static one.
#zookeeper:
#  hosts: [zk1:2181, zk2:2181, zk3:2181]


graylog:
  host: logging-dev.oceanobservatories.org


# if desired, include a list of hostnames here which will be DDNS-assigned
# to the service gateway VMs. Ensure you have at least as many hostnames
# as there will ever be VMs.
gateway_ddns_hosts: []


# if desired, you can specify a custom URL for any of the packages used in
# the launch. Uncomment this block and adjust the desired URL. Any unspecified
# package URL falls back to the default.

# packages:
#  coi_services: http://some/url.tar.gz
#  dt_data: http://some/url.tar.gz
#  epu: http://some/url.tar.gz
#  epuagent: http://some/url.tar.gz


# the launch populates a pyon.yml template file and injects it into the
# launched containers in the system. If you set this value to a local
# path, the launch will also write the pyon config there. This is useful
# for running tests or preload steps against a launched environment.
# For example you might write directly to pyon.local.yml in a coi-services
# source tree:
#
#     pyon_config_output: ~/code/coi-services/res/config/pyon.local.yml

pyon_config_output: ""
